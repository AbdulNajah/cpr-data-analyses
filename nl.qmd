---
title: "night-lights"
format:
  html:
    toc: true
    code-fold: show
execute: 
  error: true
  warning: true

---

## Data Prep

- Data prep script can be found [here](./nl_data_prep.R) 


```{r}

suppressPackageStartupMessages(library(dplyr))
path = "/Users/najah/work/cpr/data/"

#reading the all india dynast data

tcpd_dyn = read.csv(paste0(path,"tcpd_ge_dyn_23.csv"))
tcpd_dyn$dyn = as.numeric(tcpd_dyn$dyn)
# recoding empty ones and recheck as dyn
tcpd_dyn$dynast = ifelse(is.na(tcpd_dyn$dyn) | tcpd_dyn$dyn==0,0,1)


# merging the data with dynasty data

# filter to winner


# removing "_&_|_"

tcpd_dyn$state_name = gsub("_&_|_", " ", tolower(tcpd_dyn$state_name))

# add a col that indicates the second position familty type


tcpd_dyn = tcpd_dyn %>% group_by(state_name, year, constituency_no) %>% 
  mutate(second_position_dyn = sum(dynast[position==2]) )%>% 
  ungroup()


#tcpd_dyn[,c("position","dynast", "second_position_dyn")]

#filter to winner to keep observation per constituency
dyn_1 = tcpd_dyn %>% filter(position==1)

# creating the contest variable

position = dyn_1$position
second_position = dyn_1$second_position_dyn
winner = dyn_1$dynast


dyn_1$dyn_type = ifelse(winner==1 & second_position==0, "dyn vs non-dyn",ifelse(winner==0 &second_position==1, "non-dyn vs dyn", "others"))

```


```{r}
# reading nl data

nl_pc = read.csv(paste0(path,'nl_pc_india.csv'))


head(nl_pc)
```


```{r}
# merging with dyn

dyn_nl = inner_join(dyn_1, nl_pc, by = c("state_name" = "pc01_state_name", "year" = "year_el", "constituency_no" = "PC_no_2001"))

```




## Basic analysis


```{r}
dyn_nl %>% 
  group_by(dynast) %>% 
  summarise(avg_growth = mean(avg_yearly_growth))
```

## OLS

- will add


## RDD

```{r}
# prepping the data

dyn_nl = dyn_nl %>% 
  mutate(margin_5pc = ifelse(margin_percentage<=5,1,0),
        margin_2.5pc =ifelse(margin_percentage<=2.5,1,0),
        margin_10pc =ifelse(margin_percentage<=10,1,0))

# sample data
dyn_nl[, c("margin_percentage", "margin_2.5pc", "margin_5pc", "margin_10pc")][1:5,]
```




```{r}

# break-up for contest types

margin_table= dyn_nl %>% group_by(dyn_type)%>% summarise_at(c("margin_2.5pc", "margin_5pc", "margin_10pc"), sum, na.rm =TRUE)
margin_table
```



```{r}
# filtering the data for rdd
dyn_nl_rdd = dyn_nl %>% filter(dyn_type!= "others")

dyn_nl_rdd = dyn_nl_rdd%>% filter(margin_percentage<=10 ) %>% 
  mutate(mv_rdd = ifelse(dyn_type=="non-dyn vs dyn", -margin_percentage, margin_percentage))
```



```{r warning=FALSE}

## rdd graph
library(ggplot2)
ggplot(dyn_nl_rdd,  aes(mv_rdd,avg_yearly_growth , color = dyn_type))+
  geom_point()+
    geom_smooth(method="glm", se= FALSE)+
  geom_vline(xintercept = 0)+
    # scale_color_grey(labels = c("non-family winner", "family winner"))+
   labs(x = "Margin of victory", y = "average yearly growth",
        caption = "")+
   theme_bw()+
  theme(legend.position = "bottom", legend.title = element_blank())
  #ylim(0,10)

```

## RDD Model

```{r}



fit2.5 <-lm(avg_yearly_growth~relevel(as.factor(dyn_type), ref = "non-dyn vs dyn"), data = subset(dyn_nl_rdd %>% filter(margin_2.5pc ==1)))

fit5 <-lm(avg_yearly_growth~relevel(as.factor(dyn_type), ref = "non-dyn vs dyn"), data = subset(dyn_nl_rdd %>% filter(margin_5pc ==1)))

fit10 <-lm(avg_yearly_growth~relevel(as.factor(dyn_type), ref = "non-dyn vs dyn"), data = subset(dyn_nl_rdd %>% filter(margin_10pc ==1)))



stargazer::stargazer(fit2.5,fit5, fit10, type = "text", omit = "Constant", column.labels = c("2,5","5","10"), covariate.labels = c("dynast winner") )

```









